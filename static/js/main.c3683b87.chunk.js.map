{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","isXNext","stepNumber","slice","length","calculateWinner","setState","concat","step","IsXNext","current","winner","moves","map","move","desc","key","jumpTo","status","handleClick","square","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"kMAKE,SAASA,EAAOC,GACd,OACE,4BAAQC,UAAU,SAClBC,QAASF,EAAME,SAEdF,EAAMG,O,IAKPC,E,qLACSC,GAAI,IAAD,OACd,OACA,kBAACN,EAAD,CAAQI,MAAOG,KAAKN,MAAMO,QAAQF,GAClCH,QAAS,kBAAK,EAAKF,MAAME,QAAQG,Q,+BAMjC,OACE,6BACE,yBAAKJ,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,S,GAzBTC,IAAMC,WAgCpBC,E,YACJ,WAAYX,GAAQ,IAAD,8BACjB,4CAAMA,KACDY,MAAQ,CACXC,QAAS,CAAC,CACRN,QAASO,MAAM,GAAGC,KAAK,QAEzBC,SAAS,EACTC,WAAY,GAPG,E,yEAUPZ,GACV,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQK,MAAM,EAAGZ,KAAKM,MAAMK,WAAa,GAE9DV,EADUM,EAAQA,EAAQM,OAAU,GAClBZ,QAAQW,QAC5BE,EAAgBb,IAAYA,EAAQF,KAGxCE,EAAQF,GAAKC,KAAKM,MAAMI,QAAS,IAAM,IACvCV,KAAKe,SAAS,CACZR,QAASA,EAAQS,OAAO,CAAC,CACvBf,QAASA,KAEXU,WAAYJ,EAAQM,OACpBH,SAAUV,KAAKM,MAAMI,a,6BAIlBO,GACLjB,KAAKe,SAAS,CACZJ,WAAYM,EACZC,QAAUD,EAAO,IAAO,M,+BAIlB,IAAD,OACDV,EAAUP,KAAKM,MAAMC,QACrBY,EAAUZ,EAAQP,KAAKM,MAAMK,YAC7BS,EAASN,EAAgBK,EAAQlB,SAEjCoB,EAAQd,EAAQe,KAAI,SAACL,EAAMM,GAC/B,IAAMC,EAAOD,EAAI,sBAAkBA,GAAlB,mBACjB,OACE,wBAAIE,IAAKF,EAAM5B,UAAW,cACxB,4BAAQC,QAAS,kBAAM,EAAK8B,OAAOH,KAAQC,OAK7CG,EAASP,EAAM,kBAAcA,GAAd,uBAAyCpB,KAAKM,MAAMI,QAAU,IAAK,KAEtF,OACE,yBAAKf,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,CACEG,QAASkB,EAAQlB,QACjBL,QAAS,SAACG,GAAD,OAAO,EAAK6B,YAAY7B,OAErC,yBAAKJ,UAAU,aACb,6BAAMgC,GACN,4BAAKN,S,GA5DIlB,IAAMC,WAmEzB,SAASU,EAAgBe,GAWvB,IAVA,IAAMC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA/B,EAAI,EAAGA,EAAI+B,EAAMjB,OAAQd,IAAK,CAAC,IAAD,cACnB+B,EAAM/B,GADa,GAC9BgC,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAGJ,EAAOE,IAAMF,EAAOE,KAAOF,EAAOG,IAAMH,EAAOE,KAAOF,EAAOI,GAC9D,OAAOJ,EAAOE,GAGlB,OAAO,KAKTG,IAASC,OACP,kBAAC9B,EAAD,MACA+B,SAASC,eAAe,U","file":"static/js/main.c3683b87.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css'\r\n\r\n\r\n  function Square(props) {\r\n    return (\r\n      <button className=\"square\" \r\n      onClick={props.onClick}\r\n      >\r\n      {props.value}\r\n      </button>\r\n      ) \r\n  }\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (\r\n    <Square value={this.props.squares[i]}\r\n    onClick={()=> this.props.onClick(i)} />\r\n    ); \r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n      }],\r\n      isXNext: true,\r\n      stepNumber: 0,\r\n    }\r\n  }\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length -  1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.isXNext? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares,\r\n      }]),\r\n      stepNumber: history.length,\r\n      isXNext: !this.state.isXNext,\r\n    })\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      IsXNext: (step % 2) === 0,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ? `Go to move #${move}` : `Go to game start`;\r\n      return (\r\n        <li key={move} className={'moves-list'}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    })\r\n\r\n    let status = winner ? `Winner: ${winner}` : `Next Player: ${this.state.isXNext ? 'X': 'O'}`;\r\n    \r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board \r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}/>\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction calculateWinner(square) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if(square[a] && square[a] === square[b] && square[a] === square[c] ) {\r\n      return square[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}